generator client {                                                                     provider = "prisma-client-js"                                                      }                                                                                                                                                                         datasource db {                                                                        provider = "sqlite"                                                                  url      = env("DATABASE_URL")                                                     }                                                                                                                                                                         model Account {                                                                        id                 String    @id @default(cuid())                                    userId             String                                                            providerType       String                                                            providerId         String                                                            providerAccountId  String                                                            refreshToken       String?                                                           accessToken        String?                                                           accessTokenExpires DateTime?                                                         createdAt          DateTime  @default(now())                                         updatedAt          DateTime  @updatedAt                                              user               User      @relation(fields: [userId], references: [id])                                                                                                @@unique([providerId, providerAccountId])                                          }                                                                                                                                                                         model Session {                                                                        id           String   @id @default(cuid())                                           userId       String                                                                  expires      DateTime                                                                sessionToken String   @unique                                                        accessToken  String   @unique                                                        createdAt    DateTime @default(now())                                                updatedAt    DateTime @updatedAt                                                     user         User     @relation(fields: [userId], references: [id])                }                                                                                                                                                                         model User {                                                                           id            String    @id @default(cuid())                                         name          String?                                                                email         String?   @unique                                                      password      String                                                                 emailVerified DateTime?                                                              image         String?                                                                createdAt     DateTime  @default(now())                                              updatedAt     DateTime  @updatedAt                                                   accounts      Account[]                                                              sessions      Session[]                                                              notes         Note[]                                                                 tasks         Task[]                                                               }                                                                                                                                                                         model VerificationRequest {                                                            id         String   @id @default(cuid())                                             identifier String                                                                    token      String   @unique                                                          expires    DateTime                                                                  createdAt  DateTime @default(now())                                                  updatedAt  DateTime @updatedAt                                                                                                                                            @@unique([identifier, token])                                                      }                                                                                                                                                                         model Note {                                                                           id        String   @id @default(cuid())                                              authorid  String                                                                     title     String                                                                     subTitle  String                                                                     content   String                                                                     readingTime  String?                                                                 published Boolean  @default(false)                                                   shared    Boolean  @default(false)                                                   createdAt DateTime @default(now())                                                   updatedAt DateTime @updatedAt                                                        tags      Tag[]                                                                                                                                                           author User @relation(fields: [authorid], references: [id])                        }                                                                                                                                                                         model Tag {                                                                            id    String @id @default(cuid())                                                    name  String @unique                                                                 notes Note[]                                                                       }                                                                                                                                                                         model Task {                                                                           id        String   @id @default(cuid())                                              authorid  String                                                                     title     String                                                                     message   String                                                                     status    String   @default("not-started")                                           createdAt DateTime @default(now())                                                   updatedAt DateTime @updatedAt                                                        author    User     @relation(fields: [authorid], references: [id])                 }                                                                                                                                                                         // enum Status {                                                                     //   NOTSTARTED                                                                      //   STARTED                                                                         //   INPROGRESS                                                                      //   COMPLETE                                                                        //   RESCHEDULED                                                                     //   ABANDONED                                                                       // }                        